################################################################# 
                        ##### port listener 
################################################################# 
# import socket
# from ipaddress import ip_address

# connect = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
# connect.settimeout(50) ## in seconds 
# ip_addr = input("Enter your ip addresse : ")
# ip_address(ip_addr)

# PORT = int(input("Enter your port : "))
# if not ( 0 < PORT < 65535 ):
#     raise ValueError

# connect.bind((ip_addr,PORT))
# connect.listen(1)
# print("Server started")

# connection, address = connect.accept()
# print("Connect with address : ", address)

# while True:
#     data = connection.recv(1024)
#     if not data:
#         break 
#     response = "This is a recieved message".encode()
#     connection.sendall(response)
#     print(data.decode())
# connect.close()



################################################################# 
                        ##### port scanner  
################################################################# 

# import socket 
# from ipaddress import ip_address
# ip_addr = input("Enter target ip addr : ")
# ip_address(ip_addr)

# target_port = input("Enter range of ports : ")
# first_port = int(target_port.split("-")[0])
# final_port = int(target_port.split("-")[1])

# print("[+] ports from ", first_port , "to" , final_port , "will be scanned")

# for port in range(first_port,final_port):
#   connect = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
#   status = connect.connect_ex((ip_addr,port))
#   if (status == 0 ):
#     print("Connection established ")
#     print("[+] port ", port , " open")
#   else :
#     print("Connection refused ")
#     print("[+] port ", port , " closed ")
# connect.close()

